import * as React from "react";
import Head from "next/head";
import Button from "@mui/material/Button";
import TextField from "@mui/material/TextField";
import Grid from "@mui/material/Grid";
import Box from "@mui/material/Box";
import BasicSelect from "../components/Select/BasicSelect";
import ImageIcon from "@mui/icons-material/Image";
import CategoryTab from "../components/CategoryTab";
import DatePick from "../components/DatePick";
import dayjs from 'dayjs';
import axios from "../utils/axios";

import https from "https";

const agent = new https.Agent({
  rejectUnauthorized: false, // 關閉憑證驗證（⚠️僅限開發環境）
});

export default function Home() {
  //const theme = useTheme();
  const [name, setName] = React.useState("")
  const [category, setCategory] = React.useState("食")
  const [reason, setReason] = React.useState("便當")
  const [account, setAccount] = React.useState("")
  const [time, setTime]  = React.useState(dayjs())
  const [price, setPrice] = React.useState(0)
  const [categories, setCategories] = React.useState([]);
  const [loading, setLoading] = React.useState(true);
  const [error, setError] = React.useState(null);
  React.useEffect(() => {
    const fetchCategories = async () => {
      try {
        const response = await fetch('https://localhost:7283/api/category');
        if (!response.ok) {
          throw new Error('Failed to fetch categories');
        }
        const data = await response.json();
        console.log(response)
        setCategories(data.data);
      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    fetchCategories();
  }, []);

  const handleSubmit = async(e) => {
    const data = {
      name,
      category,
      reason,
      account,
      dateTime: time.format(),
      price
    }
    console.log(data)
    try {

      const response = await axios.post(`https://localhost:7283/api/expense`, data)

      if(res.request?.status == 200) {
        
      }

    } catch(err) {
      console.log(err)
    }
    console.log(data)
  }

  return (
    <>
      <Head>
        <title>My App</title>
        <meta name="description" content="Generated by create-next-app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Grid
        container
        spacing={1}
        padding={1}
        flexGrow={1}
        maxWidth="sm"
        sx={{ width: "100%" }}
      >
        <Grid
          size={12}
          item
          container
          direction="row"
          sx={{
            justifyConten: "space-between",
            alignItems: "center",
          }}
        >
          <Box
            sx={{
              display: "flex",
              justifyContent: "space-between",
              alignItems: "center",
              width: "100%",
            }}
          >
            <Button variant="contained" color="error">
              取消
            </Button>
            <Button variant="contained" onClick={handleSubmit}>新增</Button>
          </Box>
        </Grid>

        <Grid size={12} item>
          <CategoryTab data={categories} category={category} setCategory={setCategory} reason={reason} setReason={setReason}/>
        </Grid>

        <Grid size={12} item>
          <TextField
            id="outlined-basic"
            label="名稱"
            variant="outlined"
            fullWidth
            value={name}
            onChange={(e) => {
              e.preventDefault
              setName(e.target.value)
            }}
          />
        </Grid>
            <Grid size={12} item>
          <TextField
            id="outlined-basic"
            label="費用"
            variant="outlined"
            fullWidth
            value={price}
            onChange={(e) => {
              e.preventDefault
              setPrice(e.target.value)
            }}
          />
        </Grid>
        <Grid size={6} item>
          <Button
            variant="outlined"
            startIcon={<ImageIcon />}
            sx={{ width: "100%", height: "100%" }}
          >
            上傳照片
          </Button>
        </Grid>
        <Grid item container size={6} rowSpacing={1} columnSpacing={1}>
          <Grid size={12} item>
            <BasicSelect account={account} setAcount={setAccount}/>
          </Grid>
          <Grid size={12} item>
            <DatePick time={time} setTime={setTime}/>
          </Grid>
        </Grid>

        <Grid size={12} item>
          <TextField
            id="outlined-multiline-static"
            label="備註"
            multiline
            rows={3}
            defaultValue="備註"
            fullWidth
          />
        </Grid>
      </Grid>
    </>
  );
}
